{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Deploy a Go application binary to EC2 with auto-scaling",
  "Parameters": {
    "LatestAmiId": {
      "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
      "Default": "/aws/service/ami-amazon-linux-latest/al2023-ami-kernel-default-arm64"
    }
  },
  "Resources": {
    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Enable SSH and HTTP access to the application",
        "SecurityGroupIngress": [
          {
            "IpProtocol": "tcp",
            "FromPort": 22,
            "ToPort": 22,
            "CidrIp": "0.0.0.0/0"
          },
          {
            "IpProtocol": "tcp",
            "FromPort": 8000,
            "ToPort": 8000,
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    },
    "EC2InstanceRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "ec2.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "ManagedPolicyArns": [],
        "Policies": [
          {
            "PolicyName": "S3AccessPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": ["s3:PutObject", "s3:GetObject"],
                  "Resource": "arn:aws:s3:::better-youtube-playlists-bucket/*"
                }
              ]
            }
          },
          {
            "PolicyName": "SecretsManagerAccessPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "secretsmanager:GetSecretValue",
                    "secretsmanager:ListSecrets"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "EC2InstanceProfile": {
      "Type": "AWS::IAM::InstanceProfile",
      "Properties": {
        "Roles": [{ "Ref": "EC2InstanceRole" }]
      }
    },
    "LaunchTemplate": {
      "Type": "AWS::EC2::LaunchTemplate",
      "Properties": {
        "LaunchTemplateData": {
          "InstanceType": "t4g.nano",
          "KeyName": "better-youtube-playlists-key",
          "SecurityGroupIds": [
            { "Fn::GetAtt": ["InstanceSecurityGroup", "GroupId"] }
          ],
          "ImageId": { "Ref": "LatestAmiId" },
          "IamInstanceProfile": {
            "Name": { "Ref": "EC2InstanceProfile" }
          },
          "UserData": {
            "Fn::Base64": {
              "Fn::Join": [
                "\n",
                [
                  "#!/bin/bash",
                  "yum update -y",
                  "yum install -y aws-cli",
                  "cd /home/ec2-user",
                  "aws s3 cp s3://better-youtube-playlists-bucket/better-youtube-playlists-key ./better-youtube-playlists",
                  "chmod +x better-youtube-playlists",
                  "cat > /etc/systemd/system/better-youtube-playlists.service << 'EOL'",
                  "[Unit]",
                  "Description=Better YouTube Playlists Service",
                  "After=network.target",
                  "",
                  "[Service]",
                  "Type=simple",
                  "User=ec2-user",
                  "WorkingDirectory=/home/ec2-user",
                  "ExecStart=/home/ec2-user/better-youtube-playlists",
                  "Restart=always",
                  "",
                  "[Install]",
                  "WantedBy=multi-user.target",
                  "EOL",
                  "systemctl enable better-youtube-playlists",
                  "systemctl start better-youtube-playlists"
                ]
              ]
            }
          }
        }
      }
    },
    "AutoScalingGroup": {
      "Type": "AWS::AutoScaling::AutoScalingGroup",
      "Properties": {
        "LaunchTemplate": {
          "LaunchTemplateId": { "Ref": "LaunchTemplate" },
          "Version": { "Fn::GetAtt": ["LaunchTemplate", "LatestVersionNumber"] }
        },
        "MinSize": "1",
        "MaxSize": "3",
        "DesiredCapacity": "1",
        "AvailabilityZones": { "Fn::GetAZs": "" },
        "TargetGroupARNs": [{ "Ref": "AppTargetGroup" }]
      }
    },
    "AppTargetGroup": {
      "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
      "Properties": {
        "Name": "AppTargetGroup",
        "Port": 8000,
        "Protocol": "HTTP",
        "VpcId": "vpc-012ba9d92f5593473",
        "TargetType": "instance",
        "HealCheckPath": "/",
        "HealthCheckIntervalSeconds": 30,
        "HealthCheckTimeoutSeconds": 5,
        "HealthyThresholdCount": 2,
        "UnhealthyThresholdCount": 2
      }
    },
    "AppLoadBalancer": {
      "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
      "Properties": {
        "Name": "AppLoadBalancer",
        "Subnets": [
          "subnet-017727e618260a9fd",
          "subnet-0345a9dce42946c74",
          "subnet-02784e219b9efaedf"
        ],
        "SecurityGroups": [{ "Ref": "InstanceSecurityGroup" }],
        "Scheme": "internet-facing",
        "Type": "application"
      }
    },
    "AppLoadBalancerListener": {
      "Type": "AWS::ElasticLoadBalancingV2::Listener",
      "Properties": {
        "DefaultActions": [
          {
            "Type": "forward",
            "TargetGroupArn": { "Ref": "AppTargetGroup" }
          }
        ],
        "LoadBalancerArn": { "Ref": "AppLoadBalancer" },
        "Port": 80,
        "Protocol": "HTTP"
      }
    }
  },
  "Outputs": {
    "AutoScalingGroupName": {
      "Description": "Name of the Auto Scaling Group",
      "Value": { "Ref": "AutoScalingGroup" }
    }
  }
}
