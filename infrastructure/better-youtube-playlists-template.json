{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Resources": {
    "BetterYoutubePlaylistsUser": {
      "Type": "AWS::IAM::User",
      "Properties": {
        "UserName": "BetterYoutubePlaylistsUser",
        "Policies": [
          {
            "PolicyName": "BetterYoutubePlaylistsUserPolicy",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "s3:PutObject",
                    "s3:GetObject",
                    "s3:ListBucket",
                    "lambda:UpdateFunctionCode",
                    "lambda:CreateFunction",
                    "lambda:ListFunctions",
                    "cloudformation:UpdateStack",
                    "cloudformation:CreateStack",
                    "cloudformation:DescribeStacks"
                  ],
                  "Resource": "*"
                }
              ]
            }
          }
        ]
      }
    },
    "BetterYoutubePlaylistsUserAccessKey": {
      "Type": "AWS::IAM::AccessKey",
      "Properties": {
        "UserName": {
          "Ref": "BetterYoutubePlaylistsUser"
        }
      }
    },
    "LambdaExecutionRole": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              },
              "Action": "sts:AssumeRole"
            }
          ]
        },
        "Path": "/",
        "Policies": [
          {
            "PolicyName": "LambdaBasicExecution",
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": "s3:*",
                  "Resource": "*"
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogGroup",
                    "logs:CreateLogStream",
                    "logs:PutLogEvents"
                  ],
                  "Resource": "arn:aws:logs:*:*:*"
                }
              ]
            }
          }
        ]
      }
    },
    "BetterYoutubePlaylistsLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Handler": "better-youtube-playlists",
        "Role": {
          "Fn::GetAtt": ["LambdaExecutionRole", "Arn"]
        },
        "Code": {
          "S3Bucket": "better-youtube-playlists-lambda",
          "S3Key": "better-youtube-playlists-lambda.zip"
        },
        "Runtime": "provided.al2",
        "FunctionName": "BetterYoutubePlaylistsLambdaFunction"
      }
    },
    "ApiGateway": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "BetterYoutubePlaylistsApi",
        "Description": "Api Gateway for retrieving Youtube Playlist data"
      }
    },
    "ApiGatewayResource": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn:GetAtt": ["ApiGateway", "RootResourceId"]
        },
        "PathPart": "better-youtube-playlists",
        "RestApiId": {
          "Ref": "ApiGateway"
        }
      }
    },
    "ApiGatewayMethod": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "AuthorizationType": "NONE",
        "ResourceId": {
          "Ref": "ApiGatewayResource"
        },
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Sub": [
              "arn:aws:apigateway:${Region}:lambda:path/2015-03-31/functions/${LambdaArn}/invocations",
              {
                "Region": {
                  "Ref": "AWS::Region"
                },
                "LambdaArn": {
                  "Fn::GetAtt": ["BetterYoutubePlaylistsLambdaFunction", "Arn"]
                }
              }
            ]
          }
        }
      }
    },
    "ApiGatewayDeployment": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ApiGateway"
        },
        "StageName": "prod"
      },
      "DependsOn": ["ApiGatewayMethod"]
    },
    "LambdaApiGatewayInvokePermission": {
      "Type": "AWS::Lambda::Permission",
      "SourceArn": {
        "Fn::Sub": [
          "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${ApiGateway}/*/*",
          {
            "ApiGateway": {
              "Ref": "ApiGateway"
            }
          }
        ]
      }
    }
  }
}
